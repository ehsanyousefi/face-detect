{"version":3,"sources":["components/Navigation/Navigation.js","components/ImageLinkForm/ImageLinkForm.js","components/Rank/Rank.js","components/FaceRecognition/FaceRecognition.js","components/Signin/Signin.js","components/Register/Register.js","components/Logo/Logo.js","App.js","serviceWorker.js","index.js","components/Logo/logo.png"],"names":["Navigation","onRouteChange","isSignedIn","href","onClick","className","ImageLinkForm","onInputChange","onButtonSubmit","type","onChange","Rank","name","entries","FaceRecognition","imageUrl","box","id","alt","src","style","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","Signin","props","onEmailChange","event","setState","signInEmail","target","value","onPasswordChange","signInPassword","onSubmitSignIn","fetch","method","headers","body","JSON","stringify","email","state","password","then","response","json","user","loadUser","this","placeholder","React","Component","Register","onNameChange","onSubmitSignUp","Logo","options","max","height","width","logo","particles","line_linked","shadow","enable","color","blur","initialState","input","route","joined","App","data","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayFaceBox","count","Object","assign","catch","console","log","err","params","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.f7d7fba3.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Navigation.css'\r\n\r\nconst Navigation = ({ onRouteChange, isSignedIn }) => {\r\n  if (isSignedIn) {\r\n    return (\r\n      <div>\r\n        <p href='#' onClick={() => onRouteChange('signin')} className=\"psignout\">Sign Out</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Navigation\r\n","import React from 'react'\r\nimport './ImageLinkForm.css'\r\n\r\nconst ImageLinkForm = ({ onInputChange, onButtonSubmit }) => {\r\n  return (\r\n    <div>\r\n      <p className='facetext'>\r\n        {'Face Detector'}\r\n      </p>\r\n      <div className=\"box\">\r\n        <div className='inputbut'>\r\n          <input type='box' className='imginput' onChange={onInputChange}/>\r\n          <button className='button' onClick={onButtonSubmit}>Detect</button>\r\n      </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ImageLinkForm\r\n","import React from 'react'\r\n\r\nconst Rank = ({ name, entries }) => {\r\n  return (\r\n    <div>\r\n      <div className='center'>\r\n        {`${name}, Your Entry Count is : ${entries}`}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Rank\r\n","import React from 'react'\r\nimport './FaceRecognition.css'\r\n\r\nconst FaceRecognition = ({ imageUrl, box }) => {\r\n  return (\r\n  <div className='divparent'>\r\n    <div className='divchild'>\r\n      <img id='inputimage' alt='' src={imageUrl} />\r\n      <div className='bounding-box' style={{ top: box.topRow, right: box.rightCol, bottom: box.bottomRow, left: box.leftCol }}></div>\r\n    </div>\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default FaceRecognition\r\n","import React from 'react'\r\nimport './Signin.css'\r\n\r\nclass Signin extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      signInEmail: '',\r\n      signInPassword: ''\r\n    }\r\n  }\r\n\r\n  onEmailChange = (event) => {\r\n  this.setState({signInEmail: event.target.value})\r\n  }\r\n  \r\n  onPasswordChange = (event) => {\r\n    this.setState({signInPassword: event.target.value})\r\n  }\r\n\r\n  onSubmitSignIn = () => {\r\n    fetch('http://localhost:3000/signin', {\r\n      method: 'post',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        email: this.state.signInEmail,\r\n        password: this.state.signInPassword\r\n      })\r\n    })\r\n      .then(response => response.json())\r\n      .then(user => {\r\n        if (user.id) {\r\n          this.props.loadUser(user)\r\n          this.props.onRouteChange('home')\r\n        }\r\n      })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"wrapper fadeInDown\">\r\n          <div id=\"formContent\">\r\n\r\n            <h2 className=\"active\">Sign In</h2>\r\n    \r\n\r\n            <div className=\"fadeIn first\">\r\n            </div>\r\n\r\n            <div>\r\n              <input onChange={this.onEmailChange} type=\"text\" id=\"login\" className=\"fadeIn second\" name=\"login\" placeholder=\"Email\" />\r\n              <input onChange={this.onPasswordChange} type=\"text\" id=\"password\" className=\"fadeIn third\" name=\"login\" placeholder=\"Password\" />\r\n              <input id=\"click\" onClick={this.onSubmitSignIn} type=\"submit\" className=\"fadeIn fourth\" value=\"Log In\" />\r\n            </div>\r\n\r\n            <div id=\"formFooter\">\r\n              <h3 onClick={() => this.props.onRouteChange('register')} className=\"underlineHover\">Sign Up</h3>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Signin\r\n","import React from 'react'\r\nimport './Register.css'\r\n\r\nclass Register extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n  \r\n    this.state = {\r\n      email: '',\r\n      password: '',\r\n      name: ''\r\n    }\r\n  }\r\n  \r\n  onNameChange = (event) => {\r\n    this.setState({name: event.target.value})\r\n  }\r\n  onEmailChange = (event) => {\r\n    this.setState({email: event.target.value})\r\n  }\r\n  onPasswordChange = (event) => {\r\n    this.setState({password: event.target.value})\r\n  }\r\n\r\n  onSubmitSignUp = () => {\r\n    fetch('http://localhost:3000/register', {\r\n      method: 'post',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        email: this.state.email,\r\n        password: this.state.password,\r\n        name: this.state.name\r\n      })\r\n    })\r\n      .then(response => response.json())\r\n      .then(user => {\r\n        if (user.id) {\r\n          this.props.loadUser(user)\r\n          this.props.onRouteChange('home')\r\n        }\r\n      })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"wrapper fadeInDown\">\r\n          <div id=\"formContent\">\r\n\r\n            <h2 className=\"active\">Register</h2>\r\n\r\n            <div className=\"fadeIn first\">\r\n            </div>\r\n\r\n            <div>\r\n              <input onChange={this.onNameChange} type=\"text\" id=\"name\" className=\"fadeIn second\" name=\"name\" placeholder=\"Name\" />\r\n              <input onChange={this.onEmailChange} type=\"text\" id=\"login\" className=\"fadeIn second\" name=\"login\" placeholder=\"Email\" />\r\n              <input onChange={this.onPasswordChange} type=\"text\" id=\"password\" className=\"fadeIn third\" name=\"login\" placeholder=\"Password\" />\r\n              <input id=\"click\" onClick={this.onSubmitSignUp} type=\"submit\" className=\"fadeIn fourth\" value=\"Register\" />\r\n            </div>\r\n\r\n            <div id=\"formFooter\">\r\n              <h3 onClick={() => this.props.onRouteChange('signin')} className=\"underlineHover\">Sign In</h3>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Register\r\n","import React from 'react'\r\nimport './Logo.css'\r\nimport logo from './logo.png'\r\nimport Tilt from 'react-tilt'\r\n\r\nconst Logo = () => {\r\n  return (\r\n    <div>\r\n      <Tilt className=\"Tilt\" options={{ max : 30 }} style={{ height: 80, width: 150 }} >\r\n        <div className=\"Tilt-inner\"><img className=\"logo\" alt=\"\" src={logo}/></div>\r\n      </Tilt>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Logo\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Navigation from './components/Navigation/Navigation'\r\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm'\r\nimport Rank from './components/Rank/Rank'\r\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition'\r\nimport Particles from 'react-particles-js'\r\nimport Signin from './components/Signin/Signin'\r\nimport Register from './components/Register/Register'\r\nimport Logo from './components/Logo/Logo'\r\nimport 'tachyons'\r\n\r\n\r\nconst particles = {\r\n      particles: {\r\n            \t\t\tline_linked: {\r\n            \t\t\t\tshadow: {\r\n            \t\t\t\t\tenable: true,\r\n            \t\t\t\t\tcolor: \"#0d0d0d\",\r\n            \t\t\t\t\tblur: 2\r\n            \t\t\t\t}\r\n            \t\t\t}\r\n            \t\t}\r\n              }\r\n      \r\nconst initialState = {\r\n  input: '',\r\n  imageUrl: '',\r\n  box: {},\r\n  route: 'signin',\r\n  isSignedIn: false,\r\n  user: {\r\n    id: '',\r\n    name: '',\r\n    email: '',\r\n    entries: 0,\r\n    joined: '',\r\n  }\r\n}\r\n              \r\nclass App extends Component {\r\n constructor() {\r\n super()\r\n \r\n   this.state = initialState\r\n }\r\n  \r\n  loadUser = (data) => {\r\n    this.setState({\r\n      user: {\r\n        id: data.id,\r\n        name: data.name,\r\n        email: data.email,\r\n        entries: data.entries,\r\n        joined: data.joined\r\n      }\r\n    })\r\n  }\r\n  \r\n  calculateFaceLocation = (data) => {\r\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box\r\n    const image = document.getElementById('inputimage')\r\n    const width = Number(image.width)\r\n    const height = Number(image.height)\r\n    return {\r\n      leftCol: clarifaiFace.left_col * width,\r\n      topRow: clarifaiFace.top_row * height,\r\n      rightCol: width - (clarifaiFace.right_col * width),\r\n      bottomRow: height - (clarifaiFace.bottom_row * height)\r\n    }\r\n  }\r\n  \r\n  displayFaceBox = (box) => {\r\n    this.setState({ box: box })\r\n}\r\n  \r\nonInputChange = (event) => {\r\n  this.setState({\r\n    input: event.target.value\r\n  })\r\n}\r\n  \r\n  onButtonSubmit = () => {\r\n    this.setState({ imageUrl: this.state.input })\r\n    fetch('http://localhost:3000/imageurl', {\r\n      method: 'post',\r\n      headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n          input: this.state.input\r\n    })\r\n    })\r\n    .then(response => response.json())\r\n    .then(response => {\r\n      if (response) {\r\n        fetch('http://localhost:3000/image', {\r\n        method: 'put',\r\n        headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({\r\n          id: this.state.user.id\r\n      })\r\n        })\r\n          .then(response => response.json())\r\n          .then(count => {\r\n            this.setState(Object.assign(this.state.user, {\r\n              entries: count\r\n            }))\r\n          })\r\n        .catch(console.log)\r\n      }\r\n      this.displayFaceBox(this.calculateFaceLocation(response))\r\n    })\r\n    .catch(err => console.log(err)) \r\n}\r\n\r\n  onRouteChange = (route) => {\r\n    if (route === 'signout') {\r\n      this.setState(initialState)\r\n    } else if (route === 'home') {\r\n      this.setState({ isSignedIn: true })\r\n    }\r\n  this.setState({ route: route })\r\n}\r\n  \r\n  render() {\r\n    const { isSignedIn, route, box, imageUrl, user } = this.state\r\n    return (\r\n      <div className=\"App\">\r\n      <Particles className='particle' params={particles} />\r\n        {route === 'home'\r\n          ? <div>\r\n          <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange}/>\r\n          <Logo />\r\n            <Rank name={user.name} entries={user.entries}/>\r\n          <ImageLinkForm\r\n            onInputChange={this.onInputChange}\r\n            onButtonSubmit={this.onButtonSubmit}\r\n          />\r\n          <FaceRecognition box={box} imageUrl={imageUrl} />\r\n          </div>\r\n          : (\r\n            route === 'signin'\r\n            ? <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\r\n            : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\r\n          )\r\n        }\r\n    </div>\r\n  );\r\n}\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.10c96796.png\";"],"sourceRoot":""}